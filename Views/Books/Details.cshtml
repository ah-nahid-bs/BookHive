@model BookHive.ViewModels.BookViewModel

@{
    ViewData["Title"] = Model.Title ?? "Book Details";
}

<div class="container py-5">
    <div class="row">
        <div class="col-md-5">
            <div class="book-image-container">
                <img src="@(Model.ImageUrl ?? "/images/default-book.jpg")" class="rounded shadow-sm book-image" alt="@(Model.Title ?? "Book Image")" />
            </div>
        </div>
        <div class="col-md-7 book-details">
            <h2 class="book-title">@(Model.Title ?? "Untitled")</h2>
            <p class="author-name">by @(Model.Author ?? "Unknown")</p>
            <p><strong>Category:</strong> <span class="category-name">@(Model.CategoryName ?? "N/A")</span></p>
            <p><strong>Published:</strong> <span class="publish-date">@Model.PublishDate.ToString("yyyy-MM-dd")</span></p>
            <p class="description">demo description</p>
            <h4 class="current-price">â‚¹@Model.Price.ToString("F2")</h4>

            <!-- Average Rating Display -->
            <div class="average-rating mb-3">
                <strong style="color: #3c2f5f;">Rating:</strong>
                <div class="star-rating d-inline-block ms-2">
                    <span id="average-stars"></span>
                </div>
                <span id="average-rating-value" class="rating-value ms-1"></span>
            </div>

            <div class="mt-4 d-flex align-items-center gap-3">
                <form asp-controller="Cart" asp-action="AddToCart" method="post" class="d-flex align-items-center gap-2">
                    <input type="hidden" name="bookId" value="@Model.Id" />
                    <input type="number" name="quantity" value="1" min="1" class="form-control quantity-input" />
                    <button type="submit" class="btn btn-add-to-cart">Add to Cart</button>
                </form>
            </div>
        </div>
    </div>

    <!-- Reviews Section -->
    <div class="row mt-5">
        <div class="col-12">
            <h3 class="mb-4" style="color: #7e69ab;">Customer Reviews</h3>
            @if (Model.Reviews.Any())
            {
                <div class="reviews-list">
                    @foreach (var review in Model.Reviews)
                    {
                        <div class="review-card mb-3 p-3" style="background: linear-gradient(135deg, #f8f4ff, #e6e0ff); border-radius: 12px; box-shadow: 0 4px 12px rgba(155, 135, 245, 0.1);">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <strong style="color: #3c2f5f;">@(review.UserName ?? "Anonymous")</strong>
                                    <div class="star-rating">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <span class="@(i <= review.Rating ? "fas fa-star text-warning" : "far fa-star text-muted")"></span>
                                        }
                                    </div>
                                </div>
                                <small style="color: #6e59a5;">@review.CreatedAt.ToString("yyyy-MM-dd")</small>
                            </div>
                            <p class="mt-2" style="color: #3c2f5f;">@(review.Comment ?? "")</p>
                        </div>
                    }
                </div>
            }
            else
            {
                <p style="color: #6e59a5;">No reviews yet. Be the first to review this book!</p>
                @if (!User.Identity.IsAuthenticated)
                {
                    <p style="color: #6e59a5;">
                        <a asp-controller="Account" asp-action="Login" style="color: #9b87f5; text-decoration: underline;">Log in</a> to add a review.
                    </p>
                }
                else if (!ViewBag.CanReview)
                {
                    <p style="color: #6e59a5;">
                        Purchase this book to add a review.
                        <form asp-controller="Cart" asp-action="AddToCart" method="post" class="d-inline">
                            <input type="hidden" name="bookId" value="@Model.Id" />
                            <input type="hidden" name="quantity" value="1" />
                            <button type="submit" class="btn btn-link p-0" style="color: #9b87f5; text-decoration: underline;">Add to Cart</button>
                        </form>
                    </p>
                }
            }
        </div>
    </div>

    <!-- Add Review Form -->
    @if (ViewBag.CanReview)
    {
        <div class="row mt-4">
            <div class="col-12">
                <div class="card p-4" style="background: linear-gradient(135deg, #f8f4ff, #e6e0ff); border-radius: 12px; box-shadow: 0 4px 12px rgba(155, 135, 245, 0.1);">
                    <h4 class="mb-3" style="color: #7e69ab;">Write a Review</h4>
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
                    }
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
                    }
                    <form asp-action="AddReview" asp-controller="Books" method="post">
                        <input type="hidden" name="BookId" value="@Model.Id" />
                        <div class="mb-3">
                            <label class="form-label" style="color: #7e69ab;">Rating <span class="text-danger">*</span></label>
                            <select name="Rating" class="form-control" style="border-color: #9b87f5;" required>
                                <option value="">Select rating</option>
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <option value="@i">@i Star@(i > 1 ? "s" : "")</option>
                                }
                            </select>
                            <span class="text-danger" asp-validation-for="@(new BookHive.ViewModels.ReviewViewModel().Rating)"></span>
                        </div>
                        <div class="mb-3">
                            <label class="form-label" style="color: #7e69ab;">Comment</label>
                            <textarea name="Comment" class="form-control" rows="4" style="border-color: #9b87f5;" maxlength="500"></textarea>
                            <span class="text-danger" asp-validation-for="@(new BookHive.ViewModels.ReviewViewModel().Comment)"></span>
                        </div>
                        <button type="submit" class="btn" style="background-color: #9b87f5; color: #fff; border-radius: 10px;">Submit Review</button>
                    </form>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Get reviews data from Model.Reviews
            const reviews = @Html.Raw(Json.Serialize(Model.Reviews));

            // Calculate average rating
            let averageRating = 0;
            if (reviews && reviews.length > 0) {
                const totalRating = reviews.reduce((sum, review) => sum + (review.rating || 0), 0);
                averageRating = (totalRating / reviews.length).toFixed(1);
            }

            // Update average rating display
            const averageStars = document.getElementById('average-stars');
            const averageRatingValue = document.getElementById('average-rating-value');

            if (averageRating > 0) {
                let starsHtml = '';
                const fullStars = Math.floor(averageRating);
                const hasHalfStar = averageRating % 1 >= 0.5;

                for (let i = 1; i <= 5; i++) {
                    if (i <= fullStars) {
                        starsHtml += '<span class="fas fa-star text-warning"></span>';
                    } else if (i === fullStars + 1 && hasHalfStar) {
                        starsHtml += '<span class="fas fa-star-half-alt text-warning"></span>';
                    } else {
                        starsHtml += '<span class="far fa-star text-muted"></span>';
                    }
                }

                averageStars.innerHTML = starsHtml;
                averageRatingValue.textContent = `(${averageRating})`;
            } else {
                averageStars.innerHTML = '';
                averageRatingValue.textContent = '(No reviews)';
            }
        });
    </script>
}

<style>
    :root {
        --lavender-primary: hsl(270, 50%, 70%); /* #9b87f5 */
        --lavender-light: hsl(270, 30%, 90%); /* #f8f4ff */
        --lavender-dark: hsl(270, 40%, 40%); /* #7e69ab */
    }

    .book-image-container {
        overflow: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .book-image {
        width: 300px; /* Fixed width */
        height: 450px; /* Fixed height */
        object-fit: cover; /* Ensures image fills the space without distortion */
        border: 1px solid rgba(155, 135, 245, 0.2);
        border-radius: 12px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .book-image:hover {
        transform: scale(1.02);
        box-shadow: 0 8px 24px rgba(155, 135, 245, 0.3);
    }

    .book-details {
        background: linear-gradient(135deg, #ffffff, #f8f4ff);
        border: 1px solid rgba(155, 135, 245, 0.2);
        border-radius: 12px;
        padding: 2rem;
        box-shadow: 0 4px 12px rgba(155, 135, 245, 0.1);
        transition: box-shadow 0.3s ease;
    }

    .book-details:hover {
        box-shadow: 0 8px 24px rgba(155, 135, 245, 0.3);
    }

    .book-title {
        font-size: 1.75rem;
        font-weight: 600;
        color: #3c2f5f;
        margin-bottom: 0.75rem;
    }

    .author-name {
        font-size: 1rem;
        color: #6e59a5;
        margin-bottom: 0.75rem;
    }

    .category-name,
    .publish-date {
        color: #6e59a5;
        font-weight: 500;
    }

    .description {
        color: #3c2f5f;
        font-size: 1rem;
        line-height: 1.6;
        margin-bottom: 1rem;
    }

    .current-price {
        font-size: 1.5rem;
        font-weight: 600;
        color: #9b87f5;
        margin-bottom: 1rem;
    }

    .quantity-input {
        border: 1px solid #9b87f5;
        border-radius: 8px;
        background-color: #fff;
        color: #333;
        width: 80px;
        transition: border-color 0.3s ease, box-shadow 0.3s ease;
    }

    .quantity-input:focus {
        border-color: #9b87f5;
        box-shadow: 0 0 5px rgba(155, 135, 245, 0.3);
        outline: none;
    }

    .btn-add-to-cart {
        background: #9b87f5;
        color: white;
        border: none;
        border-radius: 8px;
        padding: 0.5rem 1.5rem;
        font-weight: 500;
        transition: all 0.3s ease;
        font-size: 0.875rem;
    }

    .btn-add-to-cart:hover {
        background: #7e69ab;
        color: white;
    }

    .review-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .review-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 16px rgba(155, 135, 245, 0.2);
    }

    .star-rating .fa-star,
    .star-rating .fa-star-half-alt {
        font-size: 0.9rem;
        margin-right: 2px;
    }

    .average-rating .rating-value {
        font-size: 0.9rem;
        color: #6e59a5;
    }
</style>